{"version":3,"sources":["components/card/Card.component.jsx","components/card-list/CardList.component.jsx","components/scroll/scroll.component.jsx","components/search-box/SearchBox.component.jsx","components/error-boundaries/ErrorBoundary.js","containers/App.js","redux/actions.js","redux/types.js","redux/reducers.js","index.js"],"names":["Card","robot","id","name","email","className","src","alt","CardList","robots","map","key","styles","overflowY","height","border","Scroll","props","style","children","SearchBox","handleChange","type","placeholder","onChange","ErrorBoundary","state","hasError","error","errorInfo","this","setState","Component","App","onRequestRobots","onSearchChange","searchField","isPending","filteredCats","filter","toLowerCase","includes","React","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","initialStateSearch","initialStateRobots","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"2RAceA,EAZF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACJC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MAClB,OACA,yBAAKC,UAAU,uDACX,yBAAKC,IAAG,+BAA2BJ,EAA3B,qBAAmDK,IAAI,iBAC/D,6BACI,4BAAMJ,GACN,2BAAKC,MCOFI,EAZE,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACb,6BAEQA,EAAOC,IAAI,SAAAT,GACR,OACK,kBAAC,EAAD,CAAMU,IAAKV,EAAMC,GAAID,MAAOA,QCP1CW,EAAS,CACXC,UAAW,SACXC,OAAQ,QACRC,OAAQ,mBASGC,EANA,SAAAC,GAAK,OAChB,yBAAKC,MAAQN,GACPK,EAAME,WCFDC,EANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OAChB,yBAAKhB,UAAU,OACb,2BAAOA,UAAU,mCAAoCiB,KAAK,SAASC,YAAY,kBAAkBC,SAAWH,MCmBjGI,E,YApBX,WAAYR,GAAQ,IAAD,8BACf,4CAAMA,KACDS,MAAQ,CACTC,UAAU,GAHC,E,+EAODC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAGG,KAAKJ,MAAMC,SACH,0DAEAG,KAAKb,MAAME,a,GAhBFa,aCwBtBC,E,4LAGEH,KAAKb,MAAMiB,oB,+BAGL,IAAD,EACsDJ,KAAKb,MAAxDkB,EADH,EACGA,eAAgBC,EADnB,EACmBA,YAAa3B,EADhC,EACgCA,OAAQ4B,EADxC,EACwCA,UACvCC,EAAe7B,EAAO8B,OAAO,SAAAtC,GAC/B,OAAOA,EAAME,KAAKqC,cAAcC,SAASL,EAAYI,iBAEzD,OACQ,yBAAKnC,UAAU,MACX,wBAAIA,UAAU,eAAd,cACA,kBAAC,EAAD,CAAWgB,aAAec,IAC1B,kBAAC,EAAD,KAEQE,EACI,wBAAIhC,UAAU,kBAAd,WACA,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAUI,OAAS6B,W,GApBrCI,IAAMV,WA6BTW,cA7CS,SAAAjB,GACpB,MAAO,CACHU,YAAaV,EAAMkB,aAAaR,YAChC3B,OAAQiB,EAAMmB,cAAcpC,OAC5B4B,UAAWX,EAAMmB,cAAcR,UAC/BT,MAAOF,EAAMmB,cAAcjB,QAIR,SAAAkB,GACvB,MAAO,CACHX,eAAgB,SAAAY,GAAK,OAAID,ECnBM,CACpCxB,KCHgC,sBDIhC0B,QDiBsDD,EAAME,OAAOC,SAC9DhB,gBAAiB,kBAAMY,ECfI,SAAAA,GAChCA,EAAS,CAACxB,KCNyB,2BDOnC6B,MAAM,8CACDC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAI,OAAIT,EAAS,CAAExB,KCRM,yBDQwB0B,QAASO,MAC/DC,MAAM,SAAA5B,GAAK,OAAIkB,EAAS,CAAExB,KCRC,sBDQ0B0B,QAASpB,WD2CvDe,CAA6CV,GGrDtDwB,G,MAAqB,CACvBrB,YAAa,KAYXsB,EAAqB,CACvBrB,WAAW,EACX5B,OAAQ,GACRmB,MAAO,ICPL+B,EAASC,yBAETC,EAAcC,YAAgB,CAAClB,aDPT,WAAyC,IAAxClB,EAAuC,uDAA/B+B,EAAoBM,EAAW,uCAChE,OAAQA,EAAOzC,MACX,IDR2B,sBCSvB,OAAO0C,OAAOC,OAAO,GAAIvC,EAAO,CAACU,YAAa2B,EAAOf,UACzD,QACI,OAAOtB,ICEgCmB,cDQtB,WAA4C,IAA3CnB,EAA0C,uDAAlCgC,EAAoBK,EAAc,uDAAP,GAC7D,OAAQA,EAAOzC,MACX,IDrB8B,yBCsB1B,OAAO0C,OAAOC,OAAO,GAAIvC,EAAO,CAACW,WAAW,IAChD,IDtB8B,yBCuB1B,OAAO2B,OAAOC,OAAO,GAAIvC,EAAO,CAACjB,OAAQsD,EAAOf,QAASX,WAAW,IACxE,IDvB2B,sBCwBvB,OAAO2B,OAAOC,OAAO,GAAIvC,EAAO,CAACE,MAAOmC,EAAOf,QAASX,WAAW,IACvE,QACI,OAAOX,MChBbwC,EAAQC,YAAYN,EAAaO,YAAgBC,IAAiBV,IAExEW,IAASC,OACL,kBAAC,IAAD,CAAUL,MAAOA,GACb,kBAAC,EAAD,OAEJM,SAASC,eAAe,W","file":"static/js/main.49a6e36f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ robot }) => {\r\n    const { id, name, email } = robot;\r\n    return (\r\n    <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc'>\r\n        <img src={`https://robohash.org/${ id }?200x200&set=set4`} alt='Robot friend' />\r\n        <div>\r\n            <h2>{ name }</h2>\r\n            <p>{ email }</p>\r\n        </div>\r\n    </div>\r\n)};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport Card from \"../card/Card.component\";\r\n\r\nconst CardList = ({ robots }) => (\r\n    <div>\r\n        {\r\n            robots.map(robot => {\r\n               return (\r\n                    <Card key={robot.id} robot={robot} />\r\n               )\r\n            })\r\n        }\r\n    </div>\r\n);\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst styles = {\r\n    overflowY: 'scroll',\r\n    height: '800px',\r\n    border: '1px solid black'\r\n};\r\n\r\nconst Scroll = props => (\r\n    <div style={ styles }>\r\n        { props.children }\r\n    </div>\r\n);\r\n\r\nexport default Scroll;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ handleChange }) => (\r\n  <div className=\"pa2\">\r\n    <input className=\"pa3 ba b--green bg-lightest-blue\"  type=\"search\" placeholder=\"Search for Cats\" onChange={ handleChange } />\r\n  </div>\r\n);\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({ hasError: true })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return <h1>Oops, something went wrong</h1>\r\n        } else {\r\n            return this.props.children;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CardList from \"../components/card-list/CardList.component\";\r\nimport Scroll from \"../components/scroll/scroll.component\";\r\nimport SearchBox from \"../components/search-box/SearchBox.component\";\r\nimport ErrorBoundary from \"../components/error-boundaries/ErrorBoundary\";\r\n\r\nimport {setSearchField, requestRobots} from \"../redux/actions\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchField: state.searchRobots.searchField,\r\n        robots: state.requestRobots.robots,\r\n        isPending: state.requestRobots.isPending,\r\n        error: state.requestRobots.error\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSearchChange: event => dispatch(setSearchField(event.target.value)),\r\n        onRequestRobots: () => dispatch(requestRobots())\r\n    }\r\n};\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onRequestRobots()\r\n    }\r\n\r\n    render() {\r\n        const { onSearchChange, searchField, robots, isPending } = this.props;\r\n        const filteredCats = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n        });\r\n        return (\r\n                <div className=\"tc\">\r\n                    <h1 className=\"f1 white-90\">CatFriends</h1>\r\n                    <SearchBox handleChange={ onSearchChange } />\r\n                    <Scroll>\r\n                        {\r\n                            isPending ?\r\n                                <h1 className='f1 white-90 tc'>Loading</h1> :\r\n                                <ErrorBoundary>\r\n                                    <CardList robots={ filteredCats } />\r\n                                </ErrorBoundary>\r\n                        }\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAIL } from \"./types\";\r\n\r\nexport const setSearchField = text => ({\r\n   type: CHANGE_SEARCH_FIELD,\r\n   payload: text\r\n});\r\n\r\nexport const requestRobots = () => dispatch => {\r\n   dispatch({type: REQUEST_ROBOTS_PENDING});\r\n   fetch('https://jsonplaceholder.typicode.com/users')\r\n       .then(response => response.json())\r\n       .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\r\n       .catch(error => dispatch({ type: REQUEST_ROBOTS_FAIL, payload: error }));\r\n};\r\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAIL = 'REQUEST_ROBOTS_FAIL';\r\n","import { CHANGE_SEARCH_FIELD, REQUEST_ROBOTS_PENDING, REQUEST_ROBOTS_SUCCESS, REQUEST_ROBOTS_FAIL } from \"./types\";\r\n\r\nconst initialStateSearch = {\r\n    searchField: ''\r\n};\r\n\r\nexport const searchRobots = (state = initialStateSearch, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_SEARCH_FIELD:\r\n            return Object.assign({}, state, {searchField: action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst initialStateRobots = {\r\n    isPending: false,\r\n    robots: [],\r\n    error: ''\r\n};\r\n\r\nexport const requestRobots = (state = initialStateRobots, action={}) => {\r\n    switch (action.type) {\r\n        case REQUEST_ROBOTS_PENDING:\r\n            return Object.assign({}, state, {isPending: true});\r\n        case REQUEST_ROBOTS_SUCCESS:\r\n            return Object.assign({}, state, {robots: action.payload, isPending: false});\r\n        case REQUEST_ROBOTS_FAIL:\r\n            return Object.assign({}, state, {error: action.payload, isPending: false});\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport { searchRobots, requestRobots } from \"./redux/reducers\";\n\nconst logger = createLogger();\n\nconst rootReducer = combineReducers({searchRobots, requestRobots});\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}